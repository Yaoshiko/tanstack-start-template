/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SandboxImport } from './routes/sandbox'
import { Route as NavbarImport } from './routes/_navbar'
import { Route as NavbarIndexImport } from './routes/_navbar/index'
import { Route as NavbarAuthedImport } from './routes/_navbar/_authed'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLogoutImport } from './routes/_auth/logout'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as NavbarAuthedRecipeLayoutImport } from './routes/_navbar/_authed/recipe/_layout'
import { Route as NavbarAuthedRecipeLayoutIndexImport } from './routes/_navbar/_authed/recipe/_layout/index'
import { Route as NavbarAuthedRecipeLayoutRecipeIdImport } from './routes/_navbar/_authed/recipe/_layout/$recipeId'

// Create Virtual Routes

const NavbarAuthedRecipeImport = createFileRoute('/_navbar/_authed/recipe')()

// Create/Update Routes

const SandboxRoute = SandboxImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => rootRoute,
} as any)

const NavbarRoute = NavbarImport.update({
  id: '/_navbar',
  getParentRoute: () => rootRoute,
} as any)

const NavbarIndexRoute = NavbarIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarAuthedRoute = NavbarAuthedImport.update({
  id: '/_authed',
  getParentRoute: () => NavbarRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/_auth/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const NavbarAuthedRecipeRoute = NavbarAuthedRecipeImport.update({
  id: '/recipe',
  path: '/recipe',
  getParentRoute: () => NavbarAuthedRoute,
} as any)

const NavbarAuthedRecipeLayoutRoute = NavbarAuthedRecipeLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => NavbarAuthedRecipeRoute,
} as any)

const NavbarAuthedRecipeLayoutIndexRoute =
  NavbarAuthedRecipeLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => NavbarAuthedRecipeLayoutRoute,
  } as any)

const NavbarAuthedRecipeLayoutRecipeIdRoute =
  NavbarAuthedRecipeLayoutRecipeIdImport.update({
    id: '/$recipeId',
    path: '/$recipeId',
    getParentRoute: () => NavbarAuthedRecipeLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_navbar': {
      id: '/_navbar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavbarImport
      parentRoute: typeof rootRoute
    }
    '/sandbox': {
      id: '/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof SandboxImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/logout': {
      id: '/_auth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_navbar/_authed': {
      id: '/_navbar/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavbarAuthedImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/': {
      id: '/_navbar/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavbarIndexImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/_authed/recipe': {
      id: '/_navbar/_authed/recipe'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof NavbarAuthedRecipeImport
      parentRoute: typeof NavbarAuthedImport
    }
    '/_navbar/_authed/recipe/_layout': {
      id: '/_navbar/_authed/recipe/_layout'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof NavbarAuthedRecipeLayoutImport
      parentRoute: typeof NavbarAuthedRecipeRoute
    }
    '/_navbar/_authed/recipe/_layout/$recipeId': {
      id: '/_navbar/_authed/recipe/_layout/$recipeId'
      path: '/$recipeId'
      fullPath: '/recipe/$recipeId'
      preLoaderRoute: typeof NavbarAuthedRecipeLayoutRecipeIdImport
      parentRoute: typeof NavbarAuthedRecipeLayoutImport
    }
    '/_navbar/_authed/recipe/_layout/': {
      id: '/_navbar/_authed/recipe/_layout/'
      path: '/'
      fullPath: '/recipe/'
      preLoaderRoute: typeof NavbarAuthedRecipeLayoutIndexImport
      parentRoute: typeof NavbarAuthedRecipeLayoutImport
    }
  }
}

// Create and export the route tree

interface NavbarAuthedRecipeLayoutRouteChildren {
  NavbarAuthedRecipeLayoutRecipeIdRoute: typeof NavbarAuthedRecipeLayoutRecipeIdRoute
  NavbarAuthedRecipeLayoutIndexRoute: typeof NavbarAuthedRecipeLayoutIndexRoute
}

const NavbarAuthedRecipeLayoutRouteChildren: NavbarAuthedRecipeLayoutRouteChildren =
  {
    NavbarAuthedRecipeLayoutRecipeIdRoute:
      NavbarAuthedRecipeLayoutRecipeIdRoute,
    NavbarAuthedRecipeLayoutIndexRoute: NavbarAuthedRecipeLayoutIndexRoute,
  }

const NavbarAuthedRecipeLayoutRouteWithChildren =
  NavbarAuthedRecipeLayoutRoute._addFileChildren(
    NavbarAuthedRecipeLayoutRouteChildren,
  )

interface NavbarAuthedRecipeRouteChildren {
  NavbarAuthedRecipeLayoutRoute: typeof NavbarAuthedRecipeLayoutRouteWithChildren
}

const NavbarAuthedRecipeRouteChildren: NavbarAuthedRecipeRouteChildren = {
  NavbarAuthedRecipeLayoutRoute: NavbarAuthedRecipeLayoutRouteWithChildren,
}

const NavbarAuthedRecipeRouteWithChildren =
  NavbarAuthedRecipeRoute._addFileChildren(NavbarAuthedRecipeRouteChildren)

interface NavbarAuthedRouteChildren {
  NavbarAuthedRecipeRoute: typeof NavbarAuthedRecipeRouteWithChildren
}

const NavbarAuthedRouteChildren: NavbarAuthedRouteChildren = {
  NavbarAuthedRecipeRoute: NavbarAuthedRecipeRouteWithChildren,
}

const NavbarAuthedRouteWithChildren = NavbarAuthedRoute._addFileChildren(
  NavbarAuthedRouteChildren,
)

interface NavbarRouteChildren {
  NavbarAuthedRoute: typeof NavbarAuthedRouteWithChildren
  NavbarIndexRoute: typeof NavbarIndexRoute
}

const NavbarRouteChildren: NavbarRouteChildren = {
  NavbarAuthedRoute: NavbarAuthedRouteWithChildren,
  NavbarIndexRoute: NavbarIndexRoute,
}

const NavbarRouteWithChildren =
  NavbarRoute._addFileChildren(NavbarRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof NavbarAuthedRouteWithChildren
  '/sandbox': typeof SandboxRoute
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof NavbarIndexRoute
  '/recipe': typeof NavbarAuthedRecipeLayoutRouteWithChildren
  '/recipe/$recipeId': typeof NavbarAuthedRecipeLayoutRecipeIdRoute
  '/recipe/': typeof NavbarAuthedRecipeLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/sandbox': typeof SandboxRoute
  '/login': typeof AuthLoginRoute
  '/logout': typeof AuthLogoutRoute
  '/signup': typeof AuthSignupRoute
  '': typeof NavbarAuthedRouteWithChildren
  '/': typeof NavbarIndexRoute
  '/recipe': typeof NavbarAuthedRecipeLayoutIndexRoute
  '/recipe/$recipeId': typeof NavbarAuthedRecipeLayoutRecipeIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_navbar': typeof NavbarRouteWithChildren
  '/sandbox': typeof SandboxRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/logout': typeof AuthLogoutRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_navbar/_authed': typeof NavbarAuthedRouteWithChildren
  '/_navbar/': typeof NavbarIndexRoute
  '/_navbar/_authed/recipe': typeof NavbarAuthedRecipeRouteWithChildren
  '/_navbar/_authed/recipe/_layout': typeof NavbarAuthedRecipeLayoutRouteWithChildren
  '/_navbar/_authed/recipe/_layout/$recipeId': typeof NavbarAuthedRecipeLayoutRecipeIdRoute
  '/_navbar/_authed/recipe/_layout/': typeof NavbarAuthedRecipeLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/sandbox'
    | '/login'
    | '/logout'
    | '/signup'
    | '/'
    | '/recipe'
    | '/recipe/$recipeId'
    | '/recipe/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sandbox'
    | '/login'
    | '/logout'
    | '/signup'
    | ''
    | '/'
    | '/recipe'
    | '/recipe/$recipeId'
  id:
    | '__root__'
    | '/_navbar'
    | '/sandbox'
    | '/_auth/login'
    | '/_auth/logout'
    | '/_auth/signup'
    | '/_navbar/_authed'
    | '/_navbar/'
    | '/_navbar/_authed/recipe'
    | '/_navbar/_authed/recipe/_layout'
    | '/_navbar/_authed/recipe/_layout/$recipeId'
    | '/_navbar/_authed/recipe/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  NavbarRoute: typeof NavbarRouteWithChildren
  SandboxRoute: typeof SandboxRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  NavbarRoute: NavbarRouteWithChildren,
  SandboxRoute: SandboxRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_navbar",
        "/sandbox",
        "/_auth/login",
        "/_auth/logout",
        "/_auth/signup"
      ]
    },
    "/_navbar": {
      "filePath": "_navbar.tsx",
      "children": [
        "/_navbar/_authed",
        "/_navbar/"
      ]
    },
    "/sandbox": {
      "filePath": "sandbox.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/logout": {
      "filePath": "_auth/logout.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_navbar/_authed": {
      "filePath": "_navbar/_authed.tsx",
      "parent": "/_navbar",
      "children": [
        "/_navbar/_authed/recipe"
      ]
    },
    "/_navbar/": {
      "filePath": "_navbar/index.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/_authed/recipe": {
      "filePath": "_navbar/_authed/recipe",
      "parent": "/_navbar/_authed",
      "children": [
        "/_navbar/_authed/recipe/_layout"
      ]
    },
    "/_navbar/_authed/recipe/_layout": {
      "filePath": "_navbar/_authed/recipe/_layout.tsx",
      "parent": "/_navbar/_authed/recipe",
      "children": [
        "/_navbar/_authed/recipe/_layout/$recipeId",
        "/_navbar/_authed/recipe/_layout/"
      ]
    },
    "/_navbar/_authed/recipe/_layout/$recipeId": {
      "filePath": "_navbar/_authed/recipe/_layout/$recipeId.tsx",
      "parent": "/_navbar/_authed/recipe/_layout"
    },
    "/_navbar/_authed/recipe/_layout/": {
      "filePath": "_navbar/_authed/recipe/_layout/index.tsx",
      "parent": "/_navbar/_authed/recipe/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
