/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SandboxRouteImport } from './routes/sandbox'
import { Route as NavbarRouteImport } from './routes/_navbar'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as NavbarIndexRouteImport } from './routes/_navbar/index'
import { Route as NavbarAuthedRouteImport } from './routes/_navbar/_authed'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthPasswordResetRouteImport } from './routes/_auth/password-reset'
import { Route as AuthPasswordForgotRouteImport } from './routes/_auth/password-forgot'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as NavbarAuthedRecipeNewRouteImport } from './routes/_navbar/_authed/recipe/new'
import { Route as NavbarAuthedRecipeSidebarRouteImport } from './routes/_navbar/_authed/recipe/_sidebar'
import { Route as NavbarAuthedRecipeSidebarIndexRouteImport } from './routes/_navbar/_authed/recipe/_sidebar/index'
import { Route as NavbarAuthedRecipeSidebarRecipeIdRouteImport } from './routes/_navbar/_authed/recipe/_sidebar/$recipeId'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const NavbarAuthedRecipeRouteImport = createFileRoute(
  '/_navbar/_authed/recipe',
)()
const rootServerRouteImport = createServerRootRoute()

const SandboxRoute = SandboxRouteImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => rootRouteImport,
} as any)
const NavbarRoute = NavbarRouteImport.update({
  id: '/_navbar',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const NavbarIndexRoute = NavbarIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NavbarRoute,
} as any)
const NavbarAuthedRoute = NavbarAuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => NavbarRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPasswordResetRoute = AuthPasswordResetRouteImport.update({
  id: '/password-reset',
  path: '/password-reset',
  getParentRoute: () => AuthRoute,
} as any)
const AuthPasswordForgotRoute = AuthPasswordForgotRouteImport.update({
  id: '/password-forgot',
  path: '/password-forgot',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const NavbarAuthedRecipeRoute = NavbarAuthedRecipeRouteImport.update({
  id: '/recipe',
  path: '/recipe',
  getParentRoute: () => NavbarAuthedRoute,
} as any)
const NavbarAuthedRecipeNewRoute = NavbarAuthedRecipeNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => NavbarAuthedRecipeRoute,
} as any)
const NavbarAuthedRecipeSidebarRoute =
  NavbarAuthedRecipeSidebarRouteImport.update({
    id: '/_sidebar',
    getParentRoute: () => NavbarAuthedRecipeRoute,
  } as any)
const NavbarAuthedRecipeSidebarIndexRoute =
  NavbarAuthedRecipeSidebarIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => NavbarAuthedRecipeSidebarRoute,
  } as any)
const NavbarAuthedRecipeSidebarRecipeIdRoute =
  NavbarAuthedRecipeSidebarRecipeIdRouteImport.update({
    id: '/$recipeId',
    path: '/$recipeId',
    getParentRoute: () => NavbarAuthedRecipeSidebarRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/sandbox': typeof SandboxRoute
  '/login': typeof AuthLoginRoute
  '/password-forgot': typeof AuthPasswordForgotRoute
  '/password-reset': typeof AuthPasswordResetRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof NavbarIndexRoute
  '/recipe': typeof NavbarAuthedRecipeSidebarRouteWithChildren
  '/recipe/new': typeof NavbarAuthedRecipeNewRoute
  '/recipe/$recipeId': typeof NavbarAuthedRecipeSidebarRecipeIdRoute
  '/recipe/': typeof NavbarAuthedRecipeSidebarIndexRoute
}
export interface FileRoutesByTo {
  '/sandbox': typeof SandboxRoute
  '/login': typeof AuthLoginRoute
  '/password-forgot': typeof AuthPasswordForgotRoute
  '/password-reset': typeof AuthPasswordResetRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof NavbarIndexRoute
  '/recipe': typeof NavbarAuthedRecipeSidebarIndexRoute
  '/recipe/new': typeof NavbarAuthedRecipeNewRoute
  '/recipe/$recipeId': typeof NavbarAuthedRecipeSidebarRecipeIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_navbar': typeof NavbarRouteWithChildren
  '/sandbox': typeof SandboxRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/password-forgot': typeof AuthPasswordForgotRoute
  '/_auth/password-reset': typeof AuthPasswordResetRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_navbar/_authed': typeof NavbarAuthedRouteWithChildren
  '/_navbar/': typeof NavbarIndexRoute
  '/_navbar/_authed/recipe': typeof NavbarAuthedRecipeRouteWithChildren
  '/_navbar/_authed/recipe/_sidebar': typeof NavbarAuthedRecipeSidebarRouteWithChildren
  '/_navbar/_authed/recipe/new': typeof NavbarAuthedRecipeNewRoute
  '/_navbar/_authed/recipe/_sidebar/$recipeId': typeof NavbarAuthedRecipeSidebarRecipeIdRoute
  '/_navbar/_authed/recipe/_sidebar/': typeof NavbarAuthedRecipeSidebarIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sandbox'
    | '/login'
    | '/password-forgot'
    | '/password-reset'
    | '/signup'
    | '/'
    | '/recipe'
    | '/recipe/new'
    | '/recipe/$recipeId'
    | '/recipe/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sandbox'
    | '/login'
    | '/password-forgot'
    | '/password-reset'
    | '/signup'
    | '/'
    | '/recipe'
    | '/recipe/new'
    | '/recipe/$recipeId'
  id:
    | '__root__'
    | '/_auth'
    | '/_navbar'
    | '/sandbox'
    | '/_auth/login'
    | '/_auth/password-forgot'
    | '/_auth/password-reset'
    | '/_auth/signup'
    | '/_navbar/_authed'
    | '/_navbar/'
    | '/_navbar/_authed/recipe'
    | '/_navbar/_authed/recipe/_sidebar'
    | '/_navbar/_authed/recipe/new'
    | '/_navbar/_authed/recipe/_sidebar/$recipeId'
    | '/_navbar/_authed/recipe/_sidebar/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  NavbarRoute: typeof NavbarRouteWithChildren
  SandboxRoute: typeof SandboxRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sandbox': {
      id: '/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof SandboxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navbar': {
      id: '/_navbar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavbarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_navbar/': {
      id: '/_navbar/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavbarIndexRouteImport
      parentRoute: typeof NavbarRoute
    }
    '/_navbar/_authed': {
      id: '/_navbar/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavbarAuthedRouteImport
      parentRoute: typeof NavbarRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/password-reset': {
      id: '/_auth/password-reset'
      path: '/password-reset'
      fullPath: '/password-reset'
      preLoaderRoute: typeof AuthPasswordResetRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/password-forgot': {
      id: '/_auth/password-forgot'
      path: '/password-forgot'
      fullPath: '/password-forgot'
      preLoaderRoute: typeof AuthPasswordForgotRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_navbar/_authed/recipe': {
      id: '/_navbar/_authed/recipe'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof NavbarAuthedRecipeRouteImport
      parentRoute: typeof NavbarAuthedRoute
    }
    '/_navbar/_authed/recipe/new': {
      id: '/_navbar/_authed/recipe/new'
      path: '/new'
      fullPath: '/recipe/new'
      preLoaderRoute: typeof NavbarAuthedRecipeNewRouteImport
      parentRoute: typeof NavbarAuthedRecipeRoute
    }
    '/_navbar/_authed/recipe/_sidebar': {
      id: '/_navbar/_authed/recipe/_sidebar'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof NavbarAuthedRecipeSidebarRouteImport
      parentRoute: typeof NavbarAuthedRecipeRoute
    }
    '/_navbar/_authed/recipe/_sidebar/': {
      id: '/_navbar/_authed/recipe/_sidebar/'
      path: '/'
      fullPath: '/recipe/'
      preLoaderRoute: typeof NavbarAuthedRecipeSidebarIndexRouteImport
      parentRoute: typeof NavbarAuthedRecipeSidebarRoute
    }
    '/_navbar/_authed/recipe/_sidebar/$recipeId': {
      id: '/_navbar/_authed/recipe/_sidebar/$recipeId'
      path: '/$recipeId'
      fullPath: '/recipe/$recipeId'
      preLoaderRoute: typeof NavbarAuthedRecipeSidebarRecipeIdRouteImport
      parentRoute: typeof NavbarAuthedRecipeSidebarRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthPasswordForgotRoute: typeof AuthPasswordForgotRoute
  AuthPasswordResetRoute: typeof AuthPasswordResetRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthPasswordForgotRoute: AuthPasswordForgotRoute,
  AuthPasswordResetRoute: AuthPasswordResetRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface NavbarAuthedRecipeSidebarRouteChildren {
  NavbarAuthedRecipeSidebarRecipeIdRoute: typeof NavbarAuthedRecipeSidebarRecipeIdRoute
  NavbarAuthedRecipeSidebarIndexRoute: typeof NavbarAuthedRecipeSidebarIndexRoute
}

const NavbarAuthedRecipeSidebarRouteChildren: NavbarAuthedRecipeSidebarRouteChildren =
  {
    NavbarAuthedRecipeSidebarRecipeIdRoute:
      NavbarAuthedRecipeSidebarRecipeIdRoute,
    NavbarAuthedRecipeSidebarIndexRoute: NavbarAuthedRecipeSidebarIndexRoute,
  }

const NavbarAuthedRecipeSidebarRouteWithChildren =
  NavbarAuthedRecipeSidebarRoute._addFileChildren(
    NavbarAuthedRecipeSidebarRouteChildren,
  )

interface NavbarAuthedRecipeRouteChildren {
  NavbarAuthedRecipeSidebarRoute: typeof NavbarAuthedRecipeSidebarRouteWithChildren
  NavbarAuthedRecipeNewRoute: typeof NavbarAuthedRecipeNewRoute
}

const NavbarAuthedRecipeRouteChildren: NavbarAuthedRecipeRouteChildren = {
  NavbarAuthedRecipeSidebarRoute: NavbarAuthedRecipeSidebarRouteWithChildren,
  NavbarAuthedRecipeNewRoute: NavbarAuthedRecipeNewRoute,
}

const NavbarAuthedRecipeRouteWithChildren =
  NavbarAuthedRecipeRoute._addFileChildren(NavbarAuthedRecipeRouteChildren)

interface NavbarAuthedRouteChildren {
  NavbarAuthedRecipeRoute: typeof NavbarAuthedRecipeRouteWithChildren
}

const NavbarAuthedRouteChildren: NavbarAuthedRouteChildren = {
  NavbarAuthedRecipeRoute: NavbarAuthedRecipeRouteWithChildren,
}

const NavbarAuthedRouteWithChildren = NavbarAuthedRoute._addFileChildren(
  NavbarAuthedRouteChildren,
)

interface NavbarRouteChildren {
  NavbarAuthedRoute: typeof NavbarAuthedRouteWithChildren
  NavbarIndexRoute: typeof NavbarIndexRoute
}

const NavbarRouteChildren: NavbarRouteChildren = {
  NavbarAuthedRoute: NavbarAuthedRouteWithChildren,
  NavbarIndexRoute: NavbarIndexRoute,
}

const NavbarRouteWithChildren =
  NavbarRoute._addFileChildren(NavbarRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  NavbarRoute: NavbarRouteWithChildren,
  SandboxRoute: SandboxRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
