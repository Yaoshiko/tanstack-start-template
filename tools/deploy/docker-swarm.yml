version: '3.8'

x-load-secrets-config: &load-secrets-config
  configs:
    - source: load-secrets.sh
      target: /usr/local/bin/load-secrets.sh
      mode: 0555

services:
  postgres:
    image: 192.168.1.30:5000/tanstack-start-template/database:1.0.0
    secrets:
      - tanstack-start-template_DB_PASSWORD
    <<: *load-secrets-config
    environment:
      PROJECT_NAME: tanstack-start-template
      POSTGRES_DB: tanstack-start-template
      POSTGRES_USER: app
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  drizzle:
    image: 192.168.1.30:5000/tanstack-start-template/drizzle:1.1.0
    secrets:
      - tanstack-start-template_DB_PASSWORD
    <<: *load-secrets-config
    environment:
      PROJECT_NAME: tanstack-start-template
      DB_USER: app
      DB_NAME: tanstack-start-template
      DB_HOST: postgres
      DB_PORT: 5432
    depends_on:
      - postgres
    networks:
      - app-network
      - traefik
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 3s
        window: 120s

  app:
    image: 192.168.1.30:5000/tanstack-start-template/app:1.4.0
    secrets:
      - tanstack-start-template_DB_PASSWORD
      - tanstack-start-template_BETTER_AUTH_SECRET
      - tanstack-start-template_SMTP_PASSWORD
    <<: *load-secrets-config
    environment:
      PUBLIC_BASEURL: https://donut.yaoshiko.com
      PROJECT_NAME: tanstack-start-template
      DB_USER: app
      DB_NAME: tanstack-start-template
      DB_HOST: postgres
      DB_PORT: 5432
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.rule=Host(`https://donut.yaoshiko.com`)'
      - 'traefik.http.routers.app.entrypoints=websecure'
      - 'traefik.http.routers.app.tls.certresolver=myresolver'
    depends_on:
      - drizzle
    networks:
      - app-network

  traefik:
    image: traefik:v3.3.6
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.tls.certresolver=myresolver'
    command:
      - '--providers.docker.swarmMode=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--certificatesresolvers.myresolver.acme.tlschallenge=true'
      - '--certificatesresolvers.myresolver.acme.email=nicola.barletta@outlook.it'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
      - '--api.dashboard=true'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    networks:
      - traefik
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    environment:
      ACME_EMAIL: nicola.barletta@outlook.it

volumes:
  postgres_data:
  traefik-certificates:

networks:
  app-network:
  traefik:

secrets:
  tanstack-start-template_DB_PASSWORD:
    external: true
  tanstack-start-template_BETTER_AUTH_SECRET:
    external: true
  tanstack-start-template_SMTP_PASSWORD:
    external: true

configs:
  load-secrets.sh:
    external: true
